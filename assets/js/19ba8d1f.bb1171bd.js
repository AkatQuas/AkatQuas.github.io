"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[419],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>u});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),d=i,u=m["".concat(p,".").concat(d)]||m[d]||k[d]||l;return n?a.createElement(u,r(r({ref:t},c),{},{components:n})):a.createElement(u,r({ref:t},c))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:i,r[1]=o;for(var s=2;s<l;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},46325:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(87462),i=(n(67294),n(3905));const l={title:"Wander in webpack",categories:["frontend","javascript","webpack"],tags:["webpack"]},r=void 0,o={permalink:"/blog/2020/12/06/wander-in-webpack",source:"@site/blog/2020-12-06-wander-in-webpack.md",title:"Wander in webpack",description:"Setup the project",date:"2020-12-06T00:00:00.000Z",formattedDate:"December 6, 2020",tags:[{label:"webpack",permalink:"/blog/tags/webpack"}],readingTime:6.37,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Wander in webpack",categories:["frontend","javascript","webpack"],tags:["webpack"]},prevItem:{title:"Quick learning on Shells",permalink:"/blog/2020/12/25/shells"},nextItem:{title:"Learn some Golang",permalink:"/blog/2020/09/24/golang"}},p={authorsImageUrls:[]},s=[{value:"Setup the project",id:"setup-the-project",level:2},{value:"Entry files",id:"entry-files",level:2},{value:"Webpack in script",id:"webpack-in-script",level:2},{value:"Webpack module",id:"webpack-module",level:3},{value:"<code>Compiler</code>",id:"compiler",level:4},{value:"<code>compiler.run()</code>",id:"compilerrun",level:4},{value:"<code>compiler.watch()</code>",id:"compilerwatch",level:4},{value:"Webpack in CLI",id:"webpack-in-cli",level:2},{value:"Webpack on the Fly",id:"webpack-on-the-fly",level:2},{value:"webpack-dev-middleware",id:"webpack-dev-middleware",level:3},{value:"Hack with webpack",id:"hack-with-webpack",level:2},{value:"Utilities",id:"utilities",level:2}],c={toc:s};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"setup-the-project"},"Setup the project"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/webpack/webpack.git && cd webpack\n\n# maybe switch to some branch/tag\n\n# manually\nnpm install -g yarn\nyarn\nyarn link\nyarn link webpack\n\n# automatically\nnpm run setup\n# or\nyarn setup\n")),(0,i.kt)("p",null,"At webpack, ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn")," is preferred."),(0,i.kt)("p",null,"If you already have ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn")," installed, do: ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn setup"),". This will complete all required steps."),(0,i.kt)("p",null,"If not, do: ",(0,i.kt)("inlineCode",{parentName:"p"},"npm run setup"),", the setup will also install ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn")," for you."),(0,i.kt)("p",null,"And you are good to go."),(0,i.kt)("h2",{id:"entry-files"},"Entry files"),(0,i.kt)("p",null,"The command-line executable file is ",(0,i.kt)("inlineCode",{parentName:"p"},"bin/webpack.js"),", which will invoke the ",(0,i.kt)("inlineCode",{parentName:"p"},"webpack-cli")," command."),(0,i.kt)("p",null,"The normal script entry file is ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/index.js"),", which groups the main webpack module from ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/webpack.js")," and other plugins, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"DefinePlugin"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"DllPlugin"),", and utilities."),(0,i.kt)("h2",{id:"webpack-in-script"},"Webpack in script"),(0,i.kt)("h3",{id:"webpack-module"},"Webpack module"),(0,i.kt)("p",null,"The entry function is the module exported from ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/webpack.js"),"."),(0,i.kt)("p",null,"It has a nested function to create a compiler (one of ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/Compiler.js")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/MultiCompiler.js"),"), and check the ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/configuration/watch/"},"watch mode"),"."),(0,i.kt)("p",null,"During the compiler creating time, the input options are normalized (",(0,i.kt)("inlineCode",{parentName:"p"},"getNormalizedWebpackOptions")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/config/normalization.js"),"), base-defaults-applied (",(0,i.kt)("inlineCode",{parentName:"p"},"applyWebpackOptionsBaseDefaults")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/config/defaults.js"),"), plugin-injected, defaults-applied (",(0,i.kt)("inlineCode",{parentName:"p"},"applyWebpackOptionsDefaults")," from ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/config/defaults.js"),")."),(0,i.kt)("p",null,"Some hooks of the compiler is called, ",(0,i.kt)("inlineCode",{parentName:"p"},"hooks.environment"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"hooks.afterEnvironment"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"hooks.initialize"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MultiCompiler")," would be created if the options is an array of multiple options. This type of compiler is build upon ",(0,i.kt)("inlineCode",{parentName:"p"},"Compiler")," with some tweaks."),(0,i.kt)("p",null,"Anyway, when the compiler is available, it's time to run in normal mode via ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler.run()")," or watch mode ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler.watch()"),"."),(0,i.kt)("h4",{id:"compiler"},(0,i.kt)("inlineCode",{parentName:"h4"},"Compiler")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// in lib/webpack.js, createCompiler\nconst compiler = new Compiler(options.context);\ncompiler.options = options;\n")),(0,i.kt)("p",null,"When created, the ",(0,i.kt)("inlineCode",{parentName:"p"},"Compiler")," instance is almost a collection of lots of configurations with default values."),(0,i.kt)("p",null,"More details on ",(0,i.kt)("inlineCode",{parentName:"p"},"hooks")," later. Before that, It's important to take a look at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/webpack/tapable"},(0,i.kt)("inlineCode",{parentName:"a"},"tapable")),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Understanding how ",(0,i.kt)("inlineCode",{parentName:"p"},"tapable")," works is quite helpful when figuring out how webpack works. It's the backbone of webpack anyway. References: ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/api/compiler-hooks/"},"compiler hooks"),", ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/api/compilation-hooks/"},"compilation hooks"),", ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/api/parser/"},"JavascriptParser Hooks"),"."),(0,i.kt)("p",{parentName:"blockquote"},"Here is another useful article ",(0,i.kt)("a",{parentName:"p",href:"https://juejin.cn/post/6974573181356998669"},"\u8c08\u8c08 Tapable"),".")),(0,i.kt)("p",null,"Since we have the ",(0,i.kt)("inlineCode",{parentName:"p"},"Compiler")," instance, it's time to register plugins into the instance, aka, ",(0,i.kt)("em",{parentName:"p"},"tap into hooks"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"new NodeEnvironmentPlugin({\n  infrastructureLogging: options.infrastructureLogging,\n}).apply(compiler);\n")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"NodeEnvironmentPlugin")," basically inject the some filesystem utils, whether wrapped or not, ",(0,i.kt)("inlineCode",{parentName:"p"},"inputFileSystem"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"outputFileSystem"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"watchFileSystem")," , into the instance."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"/**\n * plugins defined in config\n */\nif (Array.isArray(options.plugins)) {\n  for (const plugin of options.plugins) {\n    if (typeof plugin === 'function') {\n      plugin.call(compiler, compiler);\n    } else {\n      plugin.apply(compiler);\n    }\n  }\n}\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"It's not surprise that you have to write an ",(0,i.kt)("inlineCode",{parentName:"p"},"apply")," method in plugin class definitions.")),(0,i.kt)("h4",{id:"compilerrun"},(0,i.kt)("inlineCode",{parentName:"h4"},"compiler.run()")),(0,i.kt)("p",null,"After some necessary checks and closure functions, the compiler would trigger ",(0,i.kt)("inlineCode",{parentName:"p"},"beforeRun"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," hooks, at the callback, the compiler invoke the ",(0,i.kt)("inlineCode",{parentName:"p"},"readRecords")," methods, and in its callback, the real ",(0,i.kt)("inlineCode",{parentName:"p"},"compile")," (a method of the compiler) is called."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"readRecords"))),(0,i.kt)("p",null,"It will check the ",(0,i.kt)("inlineCode",{parentName:"p"},"recordsInputPath"),", which is a JSON file, to load the previous records. ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/configuration/other-options/#recordspath"},"Related documentation")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"compile"))),(0,i.kt)("p",null,"Finally, we are going to ",(0,i.kt)("em",{parentName:"p"},"compile")," something."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"beforeCompile")," hook is tapped"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"compile")," hook is tapped"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"compilation")," is created to do some compile works, heavy works, which is an instance of ",(0,i.kt)("inlineCode",{parentName:"li"},"lib/Compilation.js"),". The function ",(0,i.kt)("inlineCode",{parentName:"li"},"compilation.finish")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"compliation.seal")," are called."),(0,i.kt)("li",{parentName:"ul"},"after compilation, ",(0,i.kt)("inlineCode",{parentName:"li"},"emitAssets"),","),(0,i.kt)("li",{parentName:"ul"},"add additional compilation round.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"compilation"))),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Compilation")," can:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"processModuleDependencies")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"buildModule")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"addRuntimeModule")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"createModuleHashes")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"emitAsset")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"codeGeneration")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"addChunk"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"addChunkInGroup")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"processRuntimeRequirements")),(0,i.kt)("li",{parentName:"ul"},"generate ",(0,i.kt)("inlineCode",{parentName:"li"},"Stats")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"finish")," to build moduleGraph"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"seal")," to",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"optimize dependencies"),(0,i.kt)("li",{parentName:"ul"},"create chunks"),(0,i.kt)("li",{parentName:"ul"},"optimize modules and chunks"),(0,i.kt)("li",{parentName:"ul"},"assign ids to module/chunk"),(0,i.kt)("li",{parentName:"ul"},"hash module and chunks"),(0,i.kt)("li",{parentName:"ul"},"code generation, it's a long way to get here :)."),(0,i.kt)("li",{parentName:"ul"},"runtime requirements, hashing,"),(0,i.kt)("li",{parentName:"ul"},"tackle module assets, chunk assets,"))),(0,i.kt)("li",{parentName:"ul"},"...")),(0,i.kt)("h4",{id:"compilerwatch"},(0,i.kt)("inlineCode",{parentName:"h4"},"compiler.watch()")),(0,i.kt)("p",null,"This would return a compiler watcher (a ",(0,i.kt)("inlineCode",{parentName:"p"},"Watching")," instance defined in ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/Watching.js"),") if successfully executed."),(0,i.kt)("p",null,"The watch instance would invoke ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler.compiler()")," after the ",(0,i.kt)("inlineCode",{parentName:"p"},"hook.watchRun")," is triggered. And after each ",(0,i.kt)("inlineCode",{parentName:"p"},"emitRecords")," from compiler, after some necessary checks, the watcher would invoke ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler.compile")," again to rebuild. And the rest is much like ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler.run()")),(0,i.kt)("h2",{id:"webpack-in-cli"},"Webpack in CLI"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"webpack-cli")," is a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/webpack/webpack-cli"},"monorepo"),". Navigate to the package directory at ",(0,i.kt)("inlineCode",{parentName:"p"},"package/webpack-cli"),"."),(0,i.kt)("p",null,"The entry file is located at ",(0,i.kt)("inlineCode",{parentName:"p"},"bin/cli.js"),", and the real work is done by ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/webpack-cli.js"),", before which there's a ",(0,i.kt)("em",{parentName:"p"},"bootstrap")," stage (",(0,i.kt)("inlineCode",{parentName:"p"},"lib/bootstrap.js"),") to deal with the arguments coming from command line input."),(0,i.kt)("p",null,"During bootstrap, a ",(0,i.kt)("inlineCode",{parentName:"p"},"WebpackCLI")," instance would be created, and ",(0,i.kt)("inlineCode",{parentName:"p"},"WebpackCLI.run()")," starts the ",(0,i.kt)("em",{parentName:"p"},"webpack")," job."),(0,i.kt)("p",null,"Aha, in the ",(0,i.kt)("inlineCode",{parentName:"p"},"run")," method, the cli first resolve the ",(0,i.kt)("inlineCode",{parentName:"p"},"config")," options, pass it to create a webpack compiler using the ",(0,i.kt)("inlineCode",{parentName:"p"},"webpack")," package. And it's where all the dirty work done by webpack. we have already talked about how webpack does its work in the previous section."),(0,i.kt)("p",null,"Besides, calling ",(0,i.kt)("inlineCode",{parentName:"p"},"webpack")," from command line, ",(0,i.kt)("inlineCode",{parentName:"p"},"WebpackCLI")," also provides many useful commands to:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Init a webpack config, ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-cli init")),(0,i.kt)("li",{parentName:"ul"},"Scaffold a loader repository template, ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-cli loader")),(0,i.kt)("li",{parentName:"ul"},"Scaffold a plugin repository template, ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-cli plugin")),(0,i.kt)("li",{parentName:"ul"},"Inspect system information and dependencies, ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-cli info")),(0,i.kt)("li",{parentName:"ul"},"Run webpack Dev Server, ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-cli server"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("a",{parentName:"p",href:"https://yeoman.io/learning/"},"Yeoman")," is used for generating loader/plugin repository.")),(0,i.kt)("p",null,"More detailed usage could be found ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/api/cli/"},"here"),"."),(0,i.kt)("h2",{id:"webpack-on-the-fly"},"Webpack on the Fly"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"webpack-dev-server")," is a development server that provides live reloading."),(0,i.kt)("p",null,"The entry point is ",(0,i.kt)("inlineCode",{parentName:"p"},"lib/Server.js"),". It's create a node server using express."),(0,i.kt)("p",null,"Inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"constructor()"),", the server would:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"hooks into webpack ",(0,i.kt)("inlineCode",{parentName:"li"},"compiler")," lifecycle,"),(0,i.kt)("li",{parentName:"ul"},"initialize the application using ",(0,i.kt)("inlineCode",{parentName:"li"},"express"),", which will serve as for ",(0,i.kt)("inlineCode",{parentName:"li"},"http.server")),(0,i.kt)("li",{parentName:"ul"},"set up host check middleware, ",(0,i.kt)("inlineCode",{parentName:"li"},"server.checkHost()")),(0,i.kt)("li",{parentName:"ul"},"set up development middleware using ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-dev-middleware")),(0,i.kt)("li",{parentName:"ul"},"enable feature middlewares according to the given options, such as ",(0,i.kt)("em",{parentName:"li"},"webpack-dev-middleware"),", ",(0,i.kt)("em",{parentName:"li"},"compression"),", ",(0,i.kt)("em",{parentName:"li"},"proxy"),", ",(0,i.kt)("em",{parentName:"li"},"historyApiFallback")),(0,i.kt)("li",{parentName:"ul"},"optionally set up https configuration"),(0,i.kt)("li",{parentName:"ul"},"create the server using ",(0,i.kt)("inlineCode",{parentName:"li"},"http.createServer")),(0,i.kt)("li",{parentName:"ul"},"set up some supplementary routes, ",(0,i.kt)("inlineCode",{parentName:"li"},"lib/utils/routes.js")),(0,i.kt)("li",{parentName:"ul"},"set server sockets graceful killable"),(0,i.kt)("li",{parentName:"ul"},"set up websocketProxies, ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade"},"details"))),(0,i.kt)("p",null,"This server can send data to page via sockets connection."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"For example, if watching on static files is enabled, when these files change, the server would send ",(0,i.kt)("inlineCode",{parentName:"p"},"'content-change'")," event to its sockets.")),(0,i.kt)("h3",{id:"webpack-dev-middleware"},"webpack-dev-middleware"),(0,i.kt)("p",null,"This is an express-style development middleware for use with webpack bundles and allows for serving of the files emitted from webpack."),(0,i.kt)("p",null,"Some benefits of using this middleware include:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"No files are written to disk, rather it handles files in memory"),(0,i.kt)("li",{parentName:"ul"},"If files changed in watch mode, the middleware delays requests until compiling has completed."),(0,i.kt)("li",{parentName:"ul"},"Supports hot module reload (HMR).")),(0,i.kt)("p",null,"The entry file is ",(0,i.kt)("inlineCode",{parentName:"p"},"src/index.js")," which is a function, accepting two parameters, ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler")," instance created by webpack, and optional ",(0,i.kt)("inlineCode",{parentName:"p"},"options")," object."),(0,i.kt)("p",null,"Again, ",(0,i.kt)("inlineCode",{parentName:"p"},"webpack-dev-middleware")," hooks into webpack ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler")," lifecycle, doing its work after some hooks triggered."),(0,i.kt)("p",null,"The real middleware function is defined at ",(0,i.kt)("inlineCode",{parentName:"p"},"src/middleware.js"),". While handling the valid requests, the response content is read from the webpack ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler"),"'s ",(0,i.kt)("inlineCode",{parentName:"p"},"outputFileSystem"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"setupOutputFileSystem")," (",(0,i.kt)("inlineCode",{parentName:"p"},"src/utils/setupOutputFileSystem.js"),") does the trick."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"try {\n  content = context.outputFileSystem.readFileSync(filename);\n} catch (_ignoreError) {\n  await goNext();\n  return;\n}\n")),(0,i.kt)("p",null,"So whenever the webpack ",(0,i.kt)("inlineCode",{parentName:"p"},"compiler")," compiles something new:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"the ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-dev-server")," would send sockets data to the front client"),(0,i.kt)("li",{parentName:"ol"},"client refresh its pages, re-request data"),(0,i.kt)("li",{parentName:"ol"},"server read the new content from ",(0,i.kt)("inlineCode",{parentName:"li"},"compiler.outputFileSystem")," with the help of ",(0,i.kt)("inlineCode",{parentName:"li"},"webpack-dev-middleware"),", response with new data")),(0,i.kt)("h2",{id:"hack-with-webpack"},"Hack with webpack"),(0,i.kt)("p",null,"There are two major ways to play with webpack:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Tap into the webpack hooks"),(0,i.kt)("li",{parentName:"ol"},"Tap into the compilation hooks")),(0,i.kt)("p",null,"These commands would create a plugin/loader project using webpack-cli plugin/loader templates."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# install webpack-cli @webpack-cli/generate-plugin\n./node_modules/.bin/webpack-cli plugin\n\n# install webpack-cli @webpack-cli/generate-loader\n./node_modules/.bin/webpack-cli loader\n")),(0,i.kt)("p",null,"Detailed documentations for ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/contribute/writing-a-plugin/"},"plugin")," and ",(0,i.kt)("a",{parentName:"p",href:"https://webpack.js.org/contribute/writing-a-loader"},"loader"),"."),(0,i.kt)("p",null,"Tricky for writing composed plugins:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"// some-plugin/src/index.js\nconst debug = require('debug')('someplugin');\nconst { DefinePlugin } = require('webpack');\n\nclass SomePlugin {\n  constructor(options) {\n    this.options = options;\n    // ...\n  }\n  apply(compiler) {\n    debug('apply function from bundlesize plugin');\n    // some plugin functionality\n    compiler.hooks.some.tap('SomePlugin', (...args) => {\n      debug('compiler some hook!');\n    });\n    // compose other plugins\n    // for example\n    new DefinePlugin({\n      MAGIC_VALUE: JSON.stringify('magic_value'),\n    }).apply(compiler);\n  }\n}\n\nmodule.exports = SomePlugin;\n")),(0,i.kt)("h2",{id:"utilities"},"Utilities"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/webpack/webpack-sources"},"webpack-sources")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/webpack/analyse"},"stats analyse")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/webpack/enhanced-resolve"},"enhanced-resolve"))))}m.isMDXComponent=!0}}]);