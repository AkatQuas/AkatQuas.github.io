"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7320],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(r),h=a,d=u["".concat(c,".").concat(h)]||u[h]||m[h]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},95052:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(87462),a=(r(67294),r(3905));const o={title:"The character input stream",sidebar_position:2,tags:["interpreter"]},i=void 0,s={unversionedId:"interpreter-in-js/character-input-stream",id:"interpreter-in-js/character-input-stream",title:"The character input stream",description:'This is the smallest part. We\'re going to create a "stream object" which provides operations to read characters from a string. A stream object has 4 methods:',source:"@site/docs/interpreter-in-js/character-input-stream.md",sourceDirName:"interpreter-in-js",slug:"/interpreter-in-js/character-input-stream",permalink:"/docs/interpreter-in-js/character-input-stream",draft:!1,tags:[{label:"interpreter",permalink:"/docs/tags/interpreter"}],version:"current",sidebarPosition:2,frontMatter:{title:"The character input stream",sidebar_position:2,tags:["interpreter"]},sidebar:"tutorialSidebar",previous:{title:"Writing a interpreter in JavaScript",permalink:"/docs/interpreter-in-js/"},next:{title:"The token input stream",permalink:"/docs/interpreter-in-js/token-input-stream"}},c={},l=[],p={toc:l};function u(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,'This is the smallest part. We\'re going to create a "stream object" which provides operations to read characters from a string. A stream object has 4 methods:'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"peek() \u2014 returns the next value but without removing it from the stream."),(0,a.kt)("li",{parentName:"ul"},"next() \u2014 returns the next value and also discards it from the stream."),(0,a.kt)("li",{parentName:"ul"},"eof() \u2014 returns true if and only if there are no more values in the stream."),(0,a.kt)("li",{parentName:"ul"},"croak(msg) \u2014 does ",(0,a.kt)("inlineCode",{parentName:"li"},"throw new Error(msg)"),".")),(0,a.kt)("p",null,"The reason why I'm including the last one is that the stream can easily keep track of the current location (i.e. line/column), which is important to display in the case of an error message."),(0,a.kt)("p",null,"Feel free to add more methods here, depending on your needs, but for my tutorial these will suffice."),(0,a.kt)("p",null,"The character input stream deals with characters, so the values that ",(0,a.kt)("inlineCode",{parentName:"p"},"next() / peek()")," return are chars (well, since JS doesn't have a char type, they're strings containing one character)."),(0,a.kt)("p",null,"Here is the full code of this object, which I will call ",(0,a.kt)("a",{target:"_blank",href:r(55356).Z},"InputStream"),". It's small enough, and you should have no problem to understand it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"function InputStream(input) {\n  var pos = 0,\n    line = 1,\n    col = 0;\n  function next() {\n    var ch = input.charAt(pos++);\n    if (ch === '\\n') line++, (col = 0);\n    else col++;\n    return ch;\n  }\n  function peek() {\n    return input.charAt(pos);\n  }\n  function eof() {\n    return peek() === '';\n  }\n  function croak(msg) {\n    throw new Error(msg + ' (' + line + ':' + col + ')');\n  }\n  return {\n    next: next,\n    peek: peek,\n    eof: eof,\n    croak: croak,\n  };\n}\n")),(0,a.kt)("p",null,"Note that it's not a standard object (the kind you create with ",(0,a.kt)("inlineCode",{parentName:"p"},"new"),"). You just do ",(0,a.kt)("inlineCode",{parentName:"p"},"var stream = InputStream(string)")," to get a stream object."),(0,a.kt)("p",null,"Next we're going to write another abstraction on top of this object: the tokenizer."))}u.isMDXComponent=!0},55356:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/files/character-input-stream-f9c2e9af3cba6604143d122d8b4b4781.js"}}]);