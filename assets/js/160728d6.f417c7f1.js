"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1709],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=c(t),h=o,m=l["".concat(p,".").concat(h)]||l[h]||d[h]||s;return t?r.createElement(m,a(a({ref:n},u),{},{components:t})):r.createElement(m,a({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,a=new Array(s);a[0]=h;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[l]="string"==typeof e?e:o,a[1]=i;for(var c=2;c<s;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},71730:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=t(87462),o=(t(67294),t(3905));const s={title:"Redux \u6e90\u7801\u8bfb\u540e\u611f",categories:["frontend","javascript","reactjs"],tags:["reactjs","redux"]},a=void 0,i={permalink:"/blog/2020/02/10/redux-source-code-impression",source:"@site/blog/2020-02-10-redux-source-code-impression.md",title:"Redux \u6e90\u7801\u8bfb\u540e\u611f",description:"redux version is 4.0.5.",date:"2020-02-10T00:00:00.000Z",formattedDate:"February 10, 2020",tags:[{label:"reactjs",permalink:"/blog/tags/reactjs"},{label:"redux",permalink:"/blog/tags/redux"}],readingTime:15.68,hasTruncateMarker:!0,authors:[],frontMatter:{title:"Redux \u6e90\u7801\u8bfb\u540e\u611f",categories:["frontend","javascript","reactjs"],tags:["reactjs","redux"]},prevItem:{title:"\u4e00\u4e2a\u7b80\u5355\u7684QueryBuilder\u8bbe\u8ba1",permalink:"/blog/2020/02/13/simple-querybuilder"},nextItem:{title:"Depth in Event loop",permalink:"/blog/2019/12/11/depth-in-event-loop"}},p={authorsImageUrls:[]},c=[{value:"React \u548c Redux",id:"react-\u548c-redux",level:2},{value:"react-redux v6.x",id:"react-redux-v6x",level:3},{value:"react-redux v7.x",id:"react-redux-v7x",level:3},{value:"\u7ec4\u4ef6\u66f4\u65b0\u95ee\u9898\u7684\u8003\u8651",id:"\u7ec4\u4ef6\u66f4\u65b0\u95ee\u9898\u7684\u8003\u8651",level:2}],u={toc:c};function l(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"redux version is 4.0.5.")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"redux")," \u672c\u8eab\u7684\u8bbe\u8ba1\u5f88\u7b80\u5355\uff0c\u4e3b\u8981\u662f\u901a\u8fc7 ",(0,o.kt)("em",{parentName:"p"},"pure function")," \u6765\u6539\u53d8 ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u91cc\u9762 ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u7684\u503c\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux/blob/v4.0.5/src/createStore.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// \u6bcf\u4e00\u6b21\u5728\u7ec4\u4ef6\u5c42\u9762\u6216\u8005 store \u76f4\u63a5\u8c03\u7528 `dispatch`\n// \u7ecf\u8fc7\u76f8\u5173\u4e2d\u95f4\u4ef6\u7684\u6267\u884c\u4e4b\u540e\uff0c\u6700\u540e\u7684\u51fd\u6570\u4f1a\u5230\u8fd9\u91cc\nfunction dispatch(action) {\n  // \u4e00\u4e9b\u9519\u8bef\u5224\u65ad\uff0c\u9884\u9632\u673a\u5236\n  if (!isPlainObject(action)) {\n    throw new Error(\n      'Actions must be plain objects. ' +\n        'Use custom middleware for async actions.'\n    );\n  }\n\n  if (typeof action.type === 'undefined') {\n    throw new Error(\n      'Actions may not have an undefined \"type\" property. ' +\n        'Have you misspelled a constant?'\n    );\n  }\n\n  if (isDispatching) {\n    throw new Error('Reducers may not dispatch actions.');\n  }\n\n  try {\n    isDispatching = true;\n    // pure function \u66f4\u65b0 state\n    currentState = currentReducer(currentState, action);\n  } finally {\n    isDispatching = false;\n  }\n\n  // subscribed \u7684\u56de\u8c03\u5728\u8fd9\u91cc\u89e6\u53d1\n  // ...\n\n  return action;\n}\n")),(0,o.kt)("p",null,"\u8fdb\u4e00\u6b65\u5730\uff0c\u662f\u6574\u4e2a\u5bf9\u8c61\u7684\u6574\u4f53\u66ff\u6362\uff0c\u751a\u81f3\u5bf9\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"combineReducers")," \u4e4b\u540e\u7684\u5de8\u5927 ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u4f9d\u7136\u662f\u901a\u8fc7\u904d\u5386\u6574\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u7684\u6bcf\u4e00\u4e2a ",(0,o.kt)("em",{parentName:"p"},"subState")," \u6765\u8fdb\u884c ",(0,o.kt)("inlineCode",{parentName:"p"},"action")," \u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"dispatch"),"\u3002\u7406\u60f3\u6765\u770b\uff0c\u53ea\u6709\u4e9b\u8bb8\u7684\u5b58\u50a8\u5f00\u9500\uff0c\u4f46\u662f\u6bcf\u4e00\u6b65\u7684\u8fd0\u884c\u5f00\u9500\u662f\u4e0d\u53ef\u907f\u514d\u7684\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux/blob/v4.0.5/src/combineReducers.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// \u5408\u5e76\u4e4b\u540e\u7684\u4e00\u4e2a reducer\uff0c\u4e5f\u662f\u4e2a pure function\nfunction combination(\n  state: StateFromReducersMapObject<typeof reducers> = {},\n  action: AnyAction\n) {\n  // ...\n  // \u4e00\u4e9b\u9519\u8bef\u68c0\u6d4b\n  // ...\n\n  let hasChanged = false;\n  const nextState: StateFromReducersMapObject<typeof reducers> = {};\n  // \u904d\u5386\uff0c\u7136\u540e\u90a3\u76f8\u5e94\u7684 reducer \u6765\u6267\u884c action\n  for (let i = 0; i < finalReducerKeys.length; i++) {\n    const key = finalReducerKeys[i];\n    const reducer = finalReducers[key];\n    const previousStateForKey = state[key];\n    const nextStateForKey = reducer(previousStateForKey, action);\n    if (typeof nextStateForKey === 'undefined') {\n      const errorMessage = getUndefinedStateErrorMessage(key, action);\n      throw new Error(errorMessage);\n    }\n    nextState[key] = nextStateForKey;\n    hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n  }\n  hasChanged =\n    hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n\n  // \u5982\u679c\u6709\u53d8\u5316\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5168\u65b0\u7684\u5bf9\u8c61\u5f15\u7528\n  return hasChanged ? nextState : state;\n}\n")),(0,o.kt)("p",null,"\u53e6\u5916 ",(0,o.kt)("inlineCode",{parentName:"p"},"redux")," \u63d0\u4f9b\u4e86\u4e00\u79cd",(0,o.kt)("inlineCode",{parentName:"p"},"\u8ba2\u9605"),"\u6a21\u5f0f\uff0c\u5f62\u5982 ",(0,o.kt)("inlineCode",{parentName:"p"},"store.subscribe(callback)"),"\uff0c\u8fd9\u4e9b ",(0,o.kt)("inlineCode",{parentName:"p"},"callback")," \u4f1a\u88ab\u5b58\u50a8\u5230\u4e00\u4e2a\u79c1\u6709\u7684\u56de\u8c03\u51fd\u6570\u6570\u7ec4 ",(0,o.kt)("inlineCode",{parentName:"p"},"listeners")," \u91cc\u9762\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux/blob/v4.0.5/src/createStore.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function ensureCanMutateNextListeners() {\n  if (nextListeners === currentListeners) {\n    nextListeners = currentListeners.slice();\n  }\n}\n\nfunction subscribe(listener: () => void) {\n  /// ...\n  // \u9519\u8bef\u68c0\u6d4b\n  // ...\n\n  let isSubscribed = true;\n\n  ensureCanMutateNextListeners();\n  // \u63d2\u5165\u56de\u8c03\u6570\u7ec4\n  nextListeners.push(listener);\n\n  // \u8fd4\u56de unsubscribe \u51fd\u6570\uff0c\u89e3\u9664\u76d1\u542c\n  return function unsubscribe() {\n    if (!isSubscribed) {\n      return;\n    }\n\n    if (isDispatching) {\n      throw new Error(\n        'You may not unsubscribe from a store listener while the reducer is executing. ' +\n          'See https://redux.js.org/api-reference/store#subscribelistener for more details.'\n      );\n    }\n\n    isSubscribed = false;\n\n    ensureCanMutateNextListeners();\n    const index = nextListeners.indexOf(listener);\n    nextListeners.splice(index, 1);\n    currentListeners = null;\n  };\n}\n")),(0,o.kt)("p",null,"\u5f53\u6bcf\u4e00\u6b21 ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u8fdb\u884c\u5730 ",(0,o.kt)("inlineCode",{parentName:"p"},"dispatch")," \u4e00\u6b21\u6210\u529f\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"action")," \u4e4b\u540e\uff0c\uff08\u65e0\u8bba ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u662f\u5426\u53d1\u751f\u4e86\u53d8\u5316\uff09\uff0c\u90fd\u4f1a\u5bf9\u4e0a\u8ff0\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"listener")," \u8fdb\u884c\u904d\u5386\uff0c\u8c03\u7528\u6bcf\u4e00\u4e2a\u51fd\u6570\u3002\u56e0\u6b64\uff0c\u56de\u8c03\u51fd\u6570\u91cc\u9762\u8981\u663e\u793a\u7684\u68c0\u67e5\u4e00\u4e0b\u4e24\u6b21 ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u662f\u5426\u4e00\u81f4\u3002\uff08",(0,o.kt)("inlineCode",{parentName:"p"},"react-redux")," \u91cc\u9762\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"Provider")," \u5c31\u8fd9\u4e48\u505a\u7684\u3002\uff09"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux/blob/v4.0.5/src/createStore.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function dispatch(action) {\n  // ...\n  try {\n    isDispatching = true;\n    // pure function \u66f4\u65b0 state\n    currentState = currentReducer(currentState, action);\n  } finally {\n    isDispatching = false;\n  }\n\n  //  \u6267\u884c\u4e86dispatch\n  // \u65e0\u8bba state \u662f\u5426\u53d1\u751f\u6539\u53d8\n\n  // subscribed \u7684\u56de\u8c03\u5728\u8fd9\u91cc\u89e6\u53d1\n  const listeners = (currentListeners = nextListeners);\n  for (let i = 0; i < listeners.length; i++) {\n    const listener = listeners[i];\n    listener();\n  }\n\n  return action;\n}\n")),(0,o.kt)("p",null,"\u989d\u5916\u7684\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"redux")," \u63d0\u4f9b\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"middleware"),"\uff0c\u5141\u8bb8\u5728\u6267\u884c\u771f\u6b63\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"action")," ",(0,o.kt)("em",{parentName:"p"},"mutation")," \u4e4b\u524d\uff0c\u8fdb\u884c\u5176\u4ed6\u5f62\u5f0f\u7684\u51fd\u6570\u8c03\u7528\uff0c\u5e38\u89c1\u7684\u6709\u5f02\u6b65\u64cd\u4f5c\u3002"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"compose")," \u7684\u5b9e\u73b0\u4ee3\u7801\u6bd4\u8f83\u5de7\u5999\uff0c\u8ddf ",(0,o.kt)("inlineCode",{parentName:"p"},"koa-compose")," \u53ef\u4ee5\u76f8\u63d0\u5e76\u8bba\uff0c\u503c\u5f97\u597d\u597d\u5206\u6790\u3002\u6e90\u7801\u91cc\u8fd8\u5b9a\u4e49\u4e86\u8bb8\u591a\u53c2\u6570\u60c5\u5f62\u4e0b ",(0,o.kt)("inlineCode",{parentName:"p"},"compose")," \u7684\u8868\u73b0\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/redux/blob/v4.0.5/src/compose.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"function compose(...funcs: Function[]) {\n  if (funcs.length === 0) {\n    return <T>(arg: T) => arg;\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  // \u6bcf\u6b21\u8fd4\u56de\u53e6\u4e00\u4e2a\u51fd\u6570\uff0c\n  // \u6309\u5e8f\u6267\u884c\n  return funcs.reduce((a, b) => (...args: any[]) => a(b(...args)));\n}\n")),(0,o.kt)("p",null,"\u4e3a\u4e86\u52a0\u6df1\u7406\u89e3\uff0c\u6700\u540e\u4e00\u4e2a\u8fd4\u56de\u8868\u8fbe\u5f0f\u7ffb\u8bd1\u5982\u4e0b\uff0c\u6700\u7ec8\u5f62\u6210\u4e00\u4e2a\u5d4c\u5957\u591a\u5c42\u7684\u51fd\u6570\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"funcs.reduce(function (a, b) {\n  return function middle() {\n    return a(b.apply(void 0, arguments));\n  };\n});\n")),(0,o.kt)("h2",{id:"react-\u548c-redux"},"React \u548c Redux"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"redux")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"react")," \u4e00\u8d77\u4f7f\u7528\u7684\u65f6\u5019\uff0c\u8981\u501f\u52a9 ",(0,o.kt)("inlineCode",{parentName:"p"},"react-redux")," \u7684\u5e2e\u5fd9\u3002\u539f\u56e0\u662f\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u91cc\u9762\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u66f4\u65b0\u4e4b\u540e\uff0c\u8981\u89e6\u53d1 ",(0,o.kt)("inlineCode",{parentName:"p"},"react")," ",(0,o.kt)("em",{parentName:"p"},"\u76f8\u5173\u7ec4\u4ef6"),"\u7684\u66f4\u65b0\u3002"),(0,o.kt)("h3",{id:"react-redux-v6x"},"react-redux v6.x"),(0,o.kt)("p",null,"\u5728 v6.x \u7684\u4ee3\u7801\u4e2d\uff0c"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"connect")," \u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"react-redux")," \u63d0\u4f9b\u7684\u5c01\u88c5\u8fc7\u7684\u9ad8\u9636\u7ec4\u4ef6 ",(0,o.kt)("em",{parentName:"p"},"HOC"),"\uff0c\u4e3b\u8981\u529f\u80fd\u662f\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u91cc\u9762 ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u548c ",(0,o.kt)("inlineCode",{parentName:"p"},"dispatch")," \u8fdb\u884c\u76f8\u5173 ",(0,o.kt)("inlineCode",{parentName:"p"},"props")," \u7684\u6ce8\u5165\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/react-redux/blob/v6.0.1/src/connect/connect.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function connect(\n  mapStateToProps, // \u7ecf\u5e38\u4f7f\u7528\u7684\u4ece store \u91cc\u9762\u8bfb\u53d6 state \u6570\u636e\u7684\u6ce8\u5165\n  mapDispatchToProps, // dispatch \u51fd\u6570\u7684\u6ce8\u5165\n  mergeProps,\n  {\n    pure = true,\n    areStatesEqual = strictEqual,\n    areOwnPropsEqual = shallowEqual,\n    areStatePropsEqual = shallowEqual,\n    areMergedPropsEqual = shallowEqual,\n    ...extraOptions\n  } = {}\n) {\n  const initMapStateToProps = match(\n    mapStateToProps,\n    mapStateToPropsFactories,\n    'mapStateToProps'\n  );\n  const initMapDispatchToProps = match(\n    mapDispatchToProps,\n    mapDispatchToPropsFactories,\n    'mapDispatchToProps'\n  );\n  const initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n\n  // selectorFactory \u5c31\u662f\u5b9e\u9645\u4e0a\u7528\u5230\u7684\u7ec4\u4ef6\uff0c\n  // \u540e\u9762\u7684\u53c2\u6570\u90fd\u662f\u4e00\u822c\u90fd\u662f\u539f\u6709 \u95ed\u5305 \u4e2d\u5e26\u8fdb\u6765\u7684\u9ed8\u8ba4\u503c\uff0c\n  // \u5f53\u7136\u53ef\u4ee5\u5728 connect \u7684\u8c03\u7528\u65f6\u4f20\u8fdb\u6765\n  return connectHOC(selectorFactory, {\n    methodName: 'connect',\n\n    getDisplayName: (name) => `Connect(${name})`,\n\n    shouldHandleStateChanges: Boolean(mapStateToProps),\n\n    initMapStateToProps,\n    initMapDispatchToProps,\n    initMergeProps,\n    pure,\n    areStatesEqual,\n    areOwnPropsEqual,\n    areStatePropsEqual,\n    areMergedPropsEqual,\n\n    ...extraOptions,\n  });\n}\n")),(0,o.kt)("p",null,"\u9ed8\u8ba4\u7684 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/react-redux/blob/v6.0.1/src/components/connectAdvanced.js"},"connectHOC"),"."),(0,o.kt)("p",null,"\u4f46\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," \u672c\u8eab\u9f20\u6ca1\u6709\u6d89\u53ca\u6ce8\u518c ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u53d8\u5316\u7684\u76d1\u542c\u54cd\u5e94\uff0c\u56e0\u6b64\u5355\u5355\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," \u662f\u4e0d\u591f\u7684\uff0c\u4e8e\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"react-redux")," \u8fd8\u63d0\u4f9b\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"Provider"),"\uff0c\u4e00\u4e2a\u7528\u4e8e\u6839\u7ec4\u4ef6\u5305\u88c5\u7684\u7ec4\u4ef6\u3002"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Provider")," \u672c\u8eab\u4e5f\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u7ec4\u4ef6\uff0c\u5b83\u4e3b\u8981\u505a\u4e86\u4e00\u4ef6\u4e8b\u60c5\uff0c\u5373\u5bf9 ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u8fdb\u884c\u4e86\u4e00\u6b21\u76d1\u542c\uff0c\u7136\u540e\u8c03\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"setState"),"\uff0c\u4ee5\u6b64\u5f00\u59cb\uff0c\u89e6\u53d1\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"react")," \u7ec4\u4ef6\u7684\u66f4\u65b0\u3002\u4e00\u822c\u800c\u8a00\uff0c\u8fd9\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"Provider")," \u662f\u6574\u4e2a\u7ec4\u4ef6\u6811\u7684\u6839\uff0c\u4ece\u8fd9\u91cc\u5f00\u59cb\uff0c\u4f1a\u89e6\u53d1\u6574\u68f5\u7ec4\u4ef6\u6811\u7684\u66f4\u65b0\uff0c\u90a3\u4e9b\u7528\u4e86 ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," \u5305\u88f9\u7684\u7ec4\u4ef6\u540c\u65f6\u5c31\u4f1a\u53d6\u5f97\u6700\u65b0\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u91cc\u9762\u7684\u72b6\u6001\u503c\uff0c\u56e0\u6b64\u8fbe\u5230\u4e86\u66f4\u65b0\u7684\u7ed3\u679c\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/react-redux/blob/master/src/components/Provider.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"class Provider extends Component {\n  constructor(props) {\n    super(props);\n\n    const { store } = props;\n\n    this.state = {\n      storeState: store.getState(),\n      store,\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.subscribe();\n  }\n\n  componentWillUnmount() {\n    if (this.unsubscribe) this.unsubscribe();\n\n    this._isMounted = false;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.store !== prevProps.store) {\n      if (this.unsubscribe) this.unsubscribe();\n\n      this.subscribe();\n    }\n  }\n\n  subscribe() {\n    const { store } = this.props;\n\n    // \u6ce8\u518c\uff0c\u5f53 store \u91cc\u9762 state \u53d8\u5316\u65f6\uff0c\u8fdb\u884c re-render\n    this.unsubscribe = store.subscribe(() => {\n      const newStoreState = store.getState();\n\n      if (!this._isMounted) {\n        return;\n      }\n\n      this.setState((providerState) => {\n        // If the value is the same, skip the unnecessary state update.\n        if (providerState.storeState === newStoreState) {\n          return null;\n        }\n\n        return { storeState: newStoreState };\n      });\n    });\n\n    // Actions might have been dispatched between render and mount - handle those\n    const postMountStoreState = store.getState();\n    if (postMountStoreState !== this.state.storeState) {\n      this.setState({ storeState: postMountStoreState });\n    }\n  }\n\n  render() {\n    const Context = this.props.context || ReactReduxContext;\n\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n")),(0,o.kt)("h3",{id:"react-redux-v7x"},"react-redux v7.x"),(0,o.kt)("p",null,"v7.x \u7684\u7248\u672c\u4e2d\uff0c\u7ec4\u4ef6\u7684\u57fa\u672c\u90fd\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"hooks")," \u76f8\u5173 API \u8fdb\u884c\u4e86\u91cd\u6784\uff0c\u628a\u4e0a\u8ff0\u7684\u53d8\u5316\u8fdb\u884c\u4e86\u8c03\u6574\uff0c\u53ef\u4ee5\u505a\u5230\u5728\u6839\u7ec4\u4ef6 ",(0,o.kt)("inlineCode",{parentName:"p"},"Provider")," \u5b9e\u4f8b\u4e00\u4e2a\u6839\u7ea7\u8ba2\u9605\u5668\uff0c\u7136\u540e\u5728 ",(0,o.kt)("inlineCode",{parentName:"p"},"connect")," \u7684 HOC \u91cc\u9762\u8fdb\u884c\u5d4c\u5957\u8ba2\u9605\uff0c\u8fbe\u5230\u4e86\u5728\u7ec4\u4ef6\u5c42\u7ea7\u7684 re-render\uff0c\u5c31\u4e0d\u5fc5\u4ece\u6839\u7ec4\u4ef6\u91cd\u65b0\u6e32\u67d3\u4e86\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/react-redux/blob/v7.1.3/src/components/Provider.js"},"source code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"// \u7528\u4e86 hooks \u4e4b\u540e\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a stateless \u7ec4\u4ef6\n// react-redux \u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8ba2\u9605\u5668\uff0c\u56e0\u4e3a\u8981\u7ef4\u62a4 useEffect \u526f\u4f5c\u7528\u53d8\u5316\u5e26\u6765\u7684 \u53d6\u6d88/\u91cd\u65b0 \u8ba2\u9605\u673a\u5236\u3002\nfunction Provider({ store, context, children }) {\n  // \u4e00\u822c\u6765\u8bf4\uff0cstore \u662f\u4e0d\u53d8\u7684\uff0c\n  // contextValue \u4e5f\u662f\u4e0d\u53d8\u7684\n  const contextValue = useMemo(() => {\n    const subscription = new Subscription(store);\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    return {\n      store,\n      subscription,\n    };\n  }, [store]);\n\n  // \u4e00\u822c\u6765\u8bf4\uff0c store \u4e0d\u53d8\uff0c previousState \u4e5f\u662f\u4e0d\u53d8\u7684\n  const previousState = useMemo(() => store.getState(), [store]);\n\n  useEffect(() => {\n    const { subscription } = contextValue;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      // \u5982\u679c store \u6574\u4e2a\u66f4\u65b0\u4e86\uff0c\u81ea\u7136\u8981\u901a\u77e5\u4e0b\u9762\u7684\u7ec4\u4ef6\u66f4\u65b0\u3002\u6574\u4f53 re-render\n      subscription.notifyNestedSubs();\n    }\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = null;\n    };\n  }, [contextValue, previousState]);\n\n  const Context = context || ReactReduxContext;\n\n  return <Context.Provider value={contextValue}>{children}</Context.Provider>;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"connectHOC")," \u7684\u4ee3\u7801\u6bd4\u8f83\u590d\u6742\uff0c\u6bd4\u8f83\u7e41\u91cd\uff0c\u4f46\u603b\u4f53\u4e0a\u8fd8\u662f\u4e3a\u4e86\u5904\u7406 \u6570\u636e\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u4e2d\u7684\u83b7\u53d6\uff0c\u4ee5\u53ca\u6ce8\u518c ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u66f4\u65b0\u7684\u54cd\u5e94\u4e8b\u4ef6\u3002\u5176\u5b9e\u4ece\u8fd9\u4e2a\u5730\u65b9\u6765\u770b\uff0c ",(0,o.kt)("inlineCode",{parentName:"p"},"react-redux")," \u5bf9\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u7684\u5904\u7406\u5e76\u4e0d\u7b80\u6d01\u660e\u4e86\uff0c\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u54cd\u5e94\u66f4\u65b0\u95ee\u9898\uff0c\u80af\u5b9a\u662f\u4ed8\u51fa\u4e86\u5f88\u591a\u52aa\u529b\u3002"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/reduxjs/react-redux/blob/v7.1.3/src/components/connectAdvanced.js"},"connectHOC source")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"function connectAdvanced(\n  selectorFactory,\n  // options object:\n  {\n    // ...\n  } = {}\n) {\n  // \u9519\u8bef\u68c0\u67e5\n\n  const Context = context;\n\n  // \u8fd4\u56de\u5305\u88c5\u540e\u7684\u7ec4\u4ef6\n  return function wrapWithConnect(WrappedComponent) {\n    // ... \u4e00\u4e9b\u6570\u636e\u51c6\u5907\uff0c\u914d\u7f6e\u9879\u53c2\u6570\u7b49\n\n    function ConnectFunction(props) {\n      const ContextToUse = useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext &&\n          propsContext.Consumer &&\n          isContextConsumer(<propsContext.Consumer />)\n          ? propsContext\n          : Context;\n      }, [propsContext, Context]);\n\n      // \u627e\u5230\u76f8\u5173\u7684 context\uff0c\u4ee5\u4fbf\u627e\u5230\u4e0b\u9762\u7684 store\n      const contextValue = useContext(ContextToUse);\n\n      // ... store \u68c0\u67e5\n\n      // Based on the previous check, one of these must be true\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n\n      // ....\n\n      const [subscription, notifyNestedSubs] = useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY;\n\n        // \u5b50\u7ec4\u4ef6\u4e5f\u5b9e\u4f8b\u5316\u4e00\u4e2a\u8ba2\u9605\u5668\uff0c\u4ee5\u540e\u66f4\u65b0\u7ec4\u4ef6\u4f7f\u7528\n        const subscription = new Subscription(\n          store,\n          didStoreComeFromProps ? null : contextValue.subscription\n        );\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(\n          subscription\n        );\n\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]);\n\n      // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n      const overriddenContextValue = useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        }\n\n        // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n        return {\n          ...contextValue,\n          subscription,\n        };\n      }, [didStoreComeFromProps, contextValue, subscription]);\n\n      // We need to force this wrapper component to re-render whenever a Redux store update\n      // causes a change to the calculated child component props (or we caught an error in mapState)\n      const [\n        [previousStateUpdateResult],\n        forceComponentUpdateDispatch,\n      ] = useReducer(storeStateUpdatesReducer, EMPTY_ARRAY, initStateUpdates);\n\n      // Propagate any mapState/mapDispatch errors upwards\n      if (previousStateUpdateResult && previousStateUpdateResult.error) {\n        throw previousStateUpdateResult.error;\n      }\n\n      // Set up refs to coordinate values between the subscription effect and the render logic\n      const lastChildProps = useRef();\n      const lastWrapperProps = useRef(wrapperProps);\n      const childPropsFromStoreUpdate = useRef();\n      const renderIsScheduled = useRef(false);\n\n      const actualChildProps = usePureOnlyMemo(() => {\n        // Tricky logic here:\n        // - This render may have been triggered by a Redux store update that produced new child props\n        // - However, we may have gotten new wrapper props after that\n        // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n        // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n        // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n        if (\n          childPropsFromStoreUpdate.current &&\n          wrapperProps === lastWrapperProps.current\n        ) {\n          return childPropsFromStoreUpdate.current;\n        }\n\n        // TODO We're reading the store directly in render() here. Bad idea?\n        // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n        // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n        // to determine what the child props should be.\n        return childPropsSelector(store.getState(), wrapperProps);\n      }, [store, previousStateUpdateResult, wrapperProps]);\n\n      // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n      useIsomorphicLayoutEffect(() => {\n        // We want to capture the wrapper props and child props we used for later comparisons\n        lastWrapperProps.current = wrapperProps;\n        lastChildProps.current = actualChildProps;\n        renderIsScheduled.current = false;\n\n        // If the render was from a store update, clear out that reference and cascade the subscriber update\n        if (childPropsFromStoreUpdate.current) {\n          childPropsFromStoreUpdate.current = null;\n          notifyNestedSubs();\n        }\n      });\n\n      // Our re-subscribe logic only runs when the store/subscription setup changes\n      useIsomorphicLayoutEffect(() => {\n        // If we're not subscribed to the store, nothing to do here\n        if (!shouldHandleStateChanges) return;\n\n        // Capture values for checking if and when this component unmounts\n        let didUnsubscribe = false;\n        let lastThrownError = null;\n\n        // \u6bcf\u6b21 store \u66f4\u65b0\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u51fd\u6570\u90fd\u4f1a\u6267\u884c\uff0cre-render\n        const checkForUpdates = () => {\n          if (didUnsubscribe) {\n            // Don't run stale listeners.\n            // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n            return;\n          }\n\n          const latestStoreState = store.getState();\n\n          let newChildProps, error;\n          try {\n            // Actually run the selector with the most recent store state and wrapper props\n            // to determine what the child props should be\n            newChildProps = childPropsSelector(\n              latestStoreState,\n              lastWrapperProps.current\n            );\n          } catch (e) {\n            error = e;\n            lastThrownError = e;\n          }\n\n          if (!error) {\n            lastThrownError = null;\n          }\n\n          // If the child props haven't changed, nothing to do here - cascade the subscription update\n          // \u5411\u4e0b\u4f20\u9012\u66f4\u65b0\u4e8b\u4ef6\n          if (newChildProps === lastChildProps.current) {\n            if (!renderIsScheduled.current) {\n              notifyNestedSubs();\n            }\n          } else {\n            // Save references to the new child props.  Note that we track the \"child props from store update\"\n            // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n            // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n            // forcing another re-render, which we don't want.\n            lastChildProps.current = newChildProps;\n            childPropsFromStoreUpdate.current = newChildProps;\n            renderIsScheduled.current = true;\n\n            // If the child props _did_ change (or we caught an error), this wrapper component needs to re-render\n            forceComponentUpdateDispatch({\n              type: 'STORE_UPDATED',\n              payload: {\n                error,\n              },\n            });\n          }\n        };\n\n        // Actually subscribe to the nearest connected ancestor (or store)\n        subscription.onStateChange = checkForUpdates;\n        subscription.trySubscribe();\n\n        // Pull data from the store after first render in case the store has\n        // changed since we began.\n        // \u4fdd\u5e95\u7684re-render\n        checkForUpdates();\n\n        // ... \u53d6\u6d88\u8ba2\u9605\u5668\n        const unsubscribeWrapper = () => {\n          didUnsubscribe = true;\n          subscription.tryUnsubscribe();\n          subscription.onStateChange = null;\n\n          if (lastThrownError) {\n            throw lastThrownError;\n          }\n        };\n\n        return unsubscribeWrapper;\n      }, [store, subscription, childPropsSelector]);\n\n      //...\n    }\n\n    // \u6536\u5c3e\u5de5\u4f5c\uff0c\u8fd4\u56de\u6700\u7ec8\u5305\u88f9\u7684\u7ec4\u4ef6\n    // ...\n  };\n}\n")),(0,o.kt)("h2",{id:"\u7ec4\u4ef6\u66f4\u65b0\u95ee\u9898\u7684\u8003\u8651"},"\u7ec4\u4ef6\u66f4\u65b0\u95ee\u9898\u7684\u8003\u8651"),(0,o.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21 ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u7684\u66f4\u65b0\uff0c\u90fd\u4f1a\u5f15\u8d77\u4ece ",(0,o.kt)("inlineCode",{parentName:"p"},"Provider")," \u4e3a\u6839\u8282\u70b9\u7684\u6574\u68f5\u7ec4\u4ef6\u6811\u7684\u66f4\u65b0\uff0c\u7136\u540e\u8fdb\u884c\u76f8\u5e94\u7684 diff \u548c update\u3002"),(0,o.kt)("p",null,"\u56e0\u6b64\u7406\u8bba\u4e0a\u6765\u770b\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u636e\u6765\u6e90\u7684\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u591a\u62c6\u51e0\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"store"),"\uff0c\u4e0d\u5f3a\u6c42\u7ef4\u62a4\u5230\u540c\u4e00\u4e2a ",(0,o.kt)("inlineCode",{parentName:"p"},"store")," \u4e0b\uff0c\u8fd9\u5176\u5b9e\u5c31\u662f ",(0,o.kt)("inlineCode",{parentName:"p"},"mobx")," \u7684\u4e00\u4e2a\u7279\u522b\u5f62\u5f0f\u4e86\u3002"),(0,o.kt)("p",null,"\u6298\u4e2d\u7684\u529e\u6cd5\uff0c\u5c31\u76f8\u5f53\u4e8e\u628a ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u4e0b\u653e\u5230\u4e0b\u9762\u7684\u7ec4\u4ef6\uff0c\u7ed9\u4e00\u4e2a\u8f83\u9ad8\u7684\u7236\u7ec4\u4ef6\u6765\u7ef4\u62a4 ",(0,o.kt)("inlineCode",{parentName:"p"},"state")," \u7136\u540e\u5f80\u4e0b\u4f20\u503c\uff0c\u7f3a\u70b9\u5c31\u662f\u65e0\u6cd5\u4ece\u5b50\u7ec4\u4ef6\u76f4\u63a5\u6539\u53d8\u8fd9\u4e2a\u7236\u7ec4\u4ef6\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"state"),"\uff08\u56e0\u4e3a\u6ca1\u6709\u66b4\u9732\u7c7b\u4f3c\u7684 ",(0,o.kt)("inlineCode",{parentName:"p"},"dispatch"),"\u65b9\u6cd5\uff09\uff0c\u8fd9\u5bf9\u4e8e\u7ec4\u4ef6\u4f20\u503c\u8fc7\u6df1\u7684\u5b50\u7ec4\u4ef6\u6709\u4e00\u5b9a\u5f71\u54cd\u3002"),(0,o.kt)("p",null,"\u56e0\u6b64\uff0c ",(0,o.kt)("inlineCode",{parentName:"p"},"redux")," \u7684\u4f7f\u7528\u5e94\u8be5\u4ecd\u4e3b\u8981\u4ece\u6570\u636e\u7684\u5171\u4eab\u6027\u51fa\u53d1\u6765\u8003\u8651\u3002\u591a\u4f59\u7684\u72b6\u6001\u53ef\u4ee5\u653e\u5728\u7ec4\u4ef6\u81ea\u5df1\u4e2d\u7ef4\u62a4\uff0c\u5c3d\u91cf\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"hooks"),"\u3002"))}l.isMDXComponent=!0}}]);