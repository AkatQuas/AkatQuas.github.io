"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Akat","href":"/docs/about","docId":"about"},{"type":"category","label":"Computer Network","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\u8ba1\u7b97\u673a\u7f51\u7edc\u548c\u56e0\u7279\u7f51","href":"/docs/network-top-down-approach/ch01-network-and-internet","docId":"network-top-down-approach/ch01-network-and-internet"},{"type":"link","label":"\u5e94\u7528\u5c42","href":"/docs/network-top-down-approach/ch02-application-layer","docId":"network-top-down-approach/ch02-application-layer"},{"type":"link","label":"\u8fd0\u8f93\u5c42","href":"/docs/network-top-down-approach/ch03-transport-layer","docId":"network-top-down-approach/ch03-transport-layer"},{"type":"link","label":"\u7f51\u7edc\u5c42","href":"/docs/network-top-down-approach/ch04-network-layer","docId":"network-top-down-approach/ch04-network-layer"}],"href":"/docs/network-top-down-approach/"},{"type":"category","label":"Data Structure","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tree \u6811","href":"/docs/data-structure/tree","docId":"data-structure/tree"},{"type":"link","label":"Vector \u5bb9\u5668","href":"/docs/data-structure/vector","docId":"data-structure/vector"},{"type":"link","label":"list \u8868","href":"/docs/data-structure/list","docId":"data-structure/list"},{"type":"link","label":"Set and Map \u96c6\u5408","href":"/docs/data-structure/set-n-map","docId":"data-structure/set-n-map"},{"type":"link","label":"Hash table \u6563\u5217\u8868","href":"/docs/data-structure/hash-table","docId":"data-structure/hash-table"},{"type":"link","label":"Priority Queue \u4f18\u5148\u961f\u5217","href":"/docs/data-structure/priority-queue","docId":"data-structure/priority-queue"},{"type":"link","label":"Sort \u6392\u5e8f","href":"/docs/data-structure/sort","docId":"data-structure/sort"},{"type":"link","label":"Graph \u56fe","href":"/docs/data-structure/graph","docId":"data-structure/graph"}],"href":"/docs/data-structure/"},{"type":"category","label":"Compiler","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter 01 - \u7eea\u8bba","href":"/docs/compiler/in-c-ch01","docId":"compiler/in-c-ch01"},{"type":"link","label":"Chapter 02 - \u8bcd\u6cd5\u5206\u6790","href":"/docs/compiler/in-c-ch02","docId":"compiler/in-c-ch02"},{"type":"link","label":"Chapter 06 -  \u6d3b\u52a8\u8bb0\u5f55","href":"/docs/compiler/in-c-ch06","docId":"compiler/in-c-ch06"},{"type":"link","label":"\u6a21\u5f0f\u3001\u81ea\u52a8\u673a\u3001\u6b63\u5219\u8868\u8fbe\u5f0f","href":"/docs/compiler/pattern-automata-regex","docId":"compiler/pattern-automata-regex"},{"type":"link","label":"Propositional Logic \u547d\u9898\u903b\u8f91","href":"/docs/compiler/propositional-logic","docId":"compiler/propositional-logic"},{"type":"link","label":"Recursive Description of Patterns \u6a21\u5f0f\u7684\u9012\u5f52\u63cf\u8ff0","href":"/docs/compiler/recursive-description-of-patterns","docId":"compiler/recursive-description-of-patterns"}],"href":"/docs/compiler/"},{"type":"category","label":"Writing a interpreter in JavaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The character input stream","href":"/docs/interpreter-in-js/character-input-stream","docId":"interpreter-in-js/character-input-stream"},{"type":"link","label":"The token input stream","href":"/docs/interpreter-in-js/token-input-stream","docId":"interpreter-in-js/token-input-stream"},{"type":"link","label":"The AST","href":"/docs/interpreter-in-js/parser","docId":"interpreter-in-js/parser"},{"type":"link","label":"The Interpreter","href":"/docs/interpreter-in-js/interpreter","docId":"interpreter-in-js/interpreter"}],"href":"/docs/interpreter-in-js/"},{"type":"category","label":"Build Your Own Lisp Interpreter in C","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Before start","href":"/docs/lisp-interpreter-in-c/index","docId":"lisp-interpreter-in-c/index"},{"type":"link","label":"01 Basic features of C","href":"/docs/lisp-interpreter-in-c/basic-features","docId":"lisp-interpreter-in-c/basic-features"},{"type":"link","label":"02 An Interactive Prompt","href":"/docs/lisp-interpreter-in-c/interactive-prompt","docId":"lisp-interpreter-in-c/interactive-prompt"},{"type":"link","label":"03 Language Grammar","href":"/docs/lisp-interpreter-in-c/language-grammar","docId":"lisp-interpreter-in-c/language-grammar"},{"type":"link","label":"04 Parsing","href":"/docs/lisp-interpreter-in-c/parsing","docId":"lisp-interpreter-in-c/parsing"},{"type":"link","label":"05 Evaluation","href":"/docs/lisp-interpreter-in-c/evaluation","docId":"lisp-interpreter-in-c/evaluation"},{"type":"link","label":"06 Error Handling","href":"/docs/lisp-interpreter-in-c/error-handling","docId":"lisp-interpreter-in-c/error-handling"},{"type":"link","label":"07 S-Expressions","href":"/docs/lisp-interpreter-in-c/s-expressions","docId":"lisp-interpreter-in-c/s-expressions"},{"type":"link","label":"08 Q-Expressions","href":"/docs/lisp-interpreter-in-c/q-expressions","docId":"lisp-interpreter-in-c/q-expressions"},{"type":"link","label":"09 Variables","href":"/docs/lisp-interpreter-in-c/variables","docId":"lisp-interpreter-in-c/variables"},{"type":"link","label":"10 Functions","href":"/docs/lisp-interpreter-in-c/functions","docId":"lisp-interpreter-in-c/functions"},{"type":"link","label":"11 Conditionals","href":"/docs/lisp-interpreter-in-c/conditionals","docId":"lisp-interpreter-in-c/conditionals"},{"type":"link","label":"12 Strings","href":"/docs/lisp-interpreter-in-c/strings","docId":"lisp-interpreter-in-c/strings"},{"type":"link","label":"13 Standard Library","href":"/docs/lisp-interpreter-in-c/standard-library","docId":"lisp-interpreter-in-c/standard-library"}]},{"type":"category","label":"Build A Lisp Interpreter in Python","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Before start","href":"/docs/lisp-interpreter-in-py/chapter-00","docId":"lisp-interpreter-in-py/chapter-00"},{"type":"link","label":"01 Why study interpreters and compilers?","href":"/docs/lisp-interpreter-in-py/chapter-01","docId":"lisp-interpreter-in-py/chapter-01"},{"type":"link","label":"02","href":"/docs/lisp-interpreter-in-py/chapter-02","docId":"lisp-interpreter-in-py/chapter-02"},{"type":"link","label":"03","href":"/docs/lisp-interpreter-in-py/chapter-03","docId":"lisp-interpreter-in-py/chapter-03"},{"type":"link","label":"04","href":"/docs/lisp-interpreter-in-py/chapter-04","docId":"lisp-interpreter-in-py/chapter-04"},{"type":"link","label":"05","href":"/docs/lisp-interpreter-in-py/chapter-05","docId":"lisp-interpreter-in-py/chapter-05"},{"type":"link","label":"06","href":"/docs/lisp-interpreter-in-py/chapter-06","docId":"lisp-interpreter-in-py/chapter-06"},{"type":"link","label":"07","href":"/docs/lisp-interpreter-in-py/chapter-07","docId":"lisp-interpreter-in-py/chapter-07"},{"type":"link","label":"08","href":"/docs/lisp-interpreter-in-py/chapter-08","docId":"lisp-interpreter-in-py/chapter-08"},{"type":"link","label":"09","href":"/docs/lisp-interpreter-in-py/chapter-09","docId":"lisp-interpreter-in-py/chapter-09"},{"type":"link","label":"10","href":"/docs/lisp-interpreter-in-py/chapter-10","docId":"lisp-interpreter-in-py/chapter-10"},{"type":"link","label":"11","href":"/docs/lisp-interpreter-in-py/chapter-11","docId":"lisp-interpreter-in-py/chapter-11"},{"type":"link","label":"12","href":"/docs/lisp-interpreter-in-py/chapter-12","docId":"lisp-interpreter-in-py/chapter-12"},{"type":"link","label":"13 Introduction to semantic analysis","href":"/docs/lisp-interpreter-in-py/chapter-13","docId":"lisp-interpreter-in-py/chapter-13"},{"type":"link","label":"14","href":"/docs/lisp-interpreter-in-py/chapter-14","docId":"lisp-interpreter-in-py/chapter-14"}]},{"type":"category","label":"SICP","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Structure and Interpretation of Computer Programs","href":"/docs/sicp/index","docId":"sicp/index"},{"type":"link","label":"Building Abstractions with Procedures","href":"/docs/sicp/building-abstractions-with-procedures","docId":"sicp/building-abstractions-with-procedures"},{"type":"link","label":"Building Abstractions with Data","href":"/docs/sicp/building-abstractions-with-data","docId":"sicp/building-abstractions-with-data"},{"type":"link","label":"Modularity, Objects, and State","href":"/docs/sicp/modularity-objects-state","docId":"sicp/modularity-objects-state"},{"type":"link","label":"Metalinguistic Abstraction","href":"/docs/sicp/metalinguistic-abstraction","docId":"sicp/metalinguistic-abstraction"},{"type":"link","label":"Computing with Register Machines","href":"/docs/sicp/computing-with-register-machines","docId":"sicp/computing-with-register-machines"}]},{"type":"category","label":"Concurrency in Go","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introduction on Concurrency and Parallelism","href":"/docs/concurrency-in-go/introduction","docId":"concurrency-in-go/introduction"},{"type":"link","label":"Concurrency Primitives","href":"/docs/concurrency-in-go/primitives","docId":"concurrency-in-go/primitives"},{"type":"link","label":"Concurrency Patterns in Go","href":"/docs/concurrency-in-go/patterns","docId":"concurrency-in-go/patterns"},{"type":"link","label":"Concurrency at Scale","href":"/docs/concurrency-in-go/scalability","docId":"concurrency-in-go/scalability"},{"type":"link","label":"Goroutines and the Go Runtime","href":"/docs/concurrency-in-go/internal","docId":"concurrency-in-go/internal"}],"href":"/docs/concurrency-in-go/"},{"type":"category","label":"Docker","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Learn some Docker","href":"/docs/docker/","docId":"docker/index"},{"type":"link","label":"Persistent storage","href":"/docs/docker/persistent-storage","docId":"docker/persistent-storage"},{"type":"link","label":"Docker Networking","href":"/docs/docker/networking","docId":"docker/networking"},{"type":"link","label":"Docker Compose","href":"/docs/docker/docker-compose","docId":"docker/docker-compose"},{"type":"link","label":"Health checks","href":"/docs/docker/health-checks","docId":"docker/health-checks"},{"type":"link","label":"Container monitoring","href":"/docs/docker/container-monitoring","docId":"docker/container-monitoring"},{"type":"link","label":"Automation","href":"/docs/docker/automation","docId":"docker/automation"},{"type":"link","label":"Orchestration","href":"/docs/docker/orchestration","docId":"docker/orchestration"},{"type":"link","label":"Remote access","href":"/docs/docker/remote-engine","docId":"docker/remote-engine"},{"type":"link","label":"Security in Docker","href":"/docs/docker/security","docId":"docker/security"},{"type":"link","label":"Production Practices","href":"/docs/docker/production-practices","docId":"docker/production-practices"},{"type":"link","label":"Cheatsheet","href":"/docs/docker/cheatsheet","docId":"docker/cheatsheet"}],"href":"/docs/docker/"},{"type":"category","label":"Kubernetes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Kubernetes Architecture","href":"/docs/kubernetes/architecture","docId":"kubernetes/architecture"},{"type":"link","label":"the Kubernetes API Server","href":"/docs/kubernetes/api-server","docId":"kubernetes/api-server"},{"type":"link","label":"the Kubernetes Scheduler","href":"/docs/kubernetes/scheduler","docId":"kubernetes/scheduler"},{"type":"link","label":"Kubernetes Constructs","href":"/docs/kubernetes/constructs","docId":"kubernetes/constructs"},{"type":"link","label":"Authentication, User Management, Authorization and Admission Control","href":"/docs/kubernetes/authentication-authorization","docId":"kubernetes/authentication-authorization"},{"type":"link","label":"Networking, Load Balancers, Ingress","href":"/docs/kubernetes/networking","docId":"kubernetes/networking"},{"type":"link","label":"Updates, Gradual Rollouts, AutoScaling","href":"/docs/kubernetes/scaling","docId":"kubernetes/scaling"},{"type":"link","label":"Deployments, Jobs, and DaemonSets","href":"/docs/kubernetes/workloads","docId":"kubernetes/workloads"},{"type":"link","label":"ConfigMap and Secret","href":"/docs/kubernetes/configmap-secret","docId":"kubernetes/configmap-secret"},{"type":"link","label":"Storage and Running Stateful Applications","href":"/docs/kubernetes/pv-pvc","docId":"kubernetes/pv-pvc"},{"type":"link","label":"Monitoring and Logging","href":"/docs/kubernetes/monitoring-n-logging","docId":"kubernetes/monitoring-n-logging"},{"type":"link","label":"Cheatsheet","href":"/docs/kubernetes/cheatsheet","docId":"kubernetes/cheatsheet"}],"href":"/docs/kubernetes/"}]},"docs":{"about":{"id":"about","title":"Akat","description":"\u672c\u79d1\u5b66\u58eb\u5b66\u4f4d\uff0c\u4e3b\u4fee\u9020\u9505\u7089\uff0c\u53bb\u8fc7\u5316\u5de5\u5382\u4fee\u4eea\u8868\uff0c\u5e26\u8fc7\u590f\u4ee4\u8425\u6e38\u5b66\u56e2\uff0c\u8f6c\u884c\u5199\u4ee3\u7801\u3002","sidebar":"tutorialSidebar"},"compiler/in-c-ch01":{"id":"compiler/in-c-ch01","title":"Chapter 01 - \u7eea\u8bba","description":"\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u8f6c\u6362\u6210\u53ef\u6267\u884c\u4ee3\u7801\u65f6\u4f7f\u7528\u7684\u6280\u672f\u3001\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u3002","sidebar":"tutorialSidebar"},"compiler/in-c-ch02":{"id":"compiler/in-c-ch02","title":"Chapter 02 - \u8bcd\u6cd5\u5206\u6790","description":"\u4e3a\u4e86\u5c06\u4e00\u4e2a\u7a0b\u5e8f\u4ece\u4e00\u79cd\u8bed\u8a00\u7ffb\u8bd1\u6210\u53e6\u4e00\u79cd\u8bed\u8a00\uff0c\u7f16\u8bd1\u5668\u5fc5\u987b\u9996\u5148\u628a\u7a0b\u5e8f\u7684\u5404\u79cd\u6210\u5206\u62c6\u5f00\uff0c\u5e76\u641e\u6e05\u5176\u7ed3\u6784\u548c\u542b\u4e49\uff0c\u4e4b\u540e\u518d\u7528\u53e6\u4e00\u79cd\u65b9\u5f0f\u628a\u8fd9\u4e9b\u6210\u5206\u7ec4\u5408\u8d77\u6765\u3002\u7f16\u8bd1\u5668\u7684\u524d\u7aef\u6267\u884c\u5206\u6790\uff0c\u540e\u7aef\u8fdb\u884c\u5408\u6210\u3002","sidebar":"tutorialSidebar"},"compiler/in-c-ch06":{"id":"compiler/in-c-ch06","title":"Chapter 06 -  \u6d3b\u52a8\u8bb0\u5f55","description":"\u51e0\u4e4e\u6240\u6709\u73b0\u4ee3\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u4e2d\uff0c\u51fd\u6570\u90fd\u53ef\u4ee5\u7531 \u5c40\u90e8\u53d8\u91cf \uff0c\u8fd9\u4e9b\u5c40\u90e8\u53d8\u91cf\u662f\u5728\u51fd\u6570\u7684\u5165\u53e3\u521b\u5efa\u7684\u3002\u5728\u540c\u4e00\u65f6\u523b\u53ef\u80fd\u5b58\u5728\u5bf9\u51fd\u6570\u7684\u591a\u4e2a\u8c03\u7528\uff0c\u6bcf\u4e2a\u8c03\u7528\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u5c40\u90e8\u53d8\u91cf \u5b9e\u4f8b \u3002","sidebar":"tutorialSidebar"},"compiler/index":{"id":"compiler/index","title":"Build a Compiler","description":"Excerpts on compiler, pattern, automata, parsing, semantic analysing are in the folder.","sidebar":"tutorialSidebar"},"compiler/pattern-automata-regex":{"id":"compiler/pattern-automata-regex","title":"\u6a21\u5f0f\u3001\u81ea\u52a8\u673a\u3001\u6b63\u5219\u8868\u8fbe\u5f0f","description":"\u6a21\u5f0fpattern\u662f\u5177\u6709\u67d0\u4e2a\u53ef\u8bc6\u522b\u5c5e\u6027\u7684\u5bf9\u8c61\u7ec4\u6210\u7684\u96c6\u5408\u3002\u4e0e\u6a21\u5f0f\u76f8\u5173\u7684\u4e24\u4e2a\u57fa\u672c\u95ee\u9898\u662f\u5b83\u4eec\u7684\u5b9a\u4e49difinition\u4e0e\u8bc6\u522brecoginition\u3002","sidebar":"tutorialSidebar"},"compiler/propositional-logic":{"id":"compiler/propositional-logic","title":"Propositional Logic \u547d\u9898\u903b\u8f91","description":"\u547d\u9898\u903b\u8f91\u662f\u8ba9\u53ef\u4ee5\u5bf9\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u771f\u5047\u8fdb\u884c\u63a8\u7406\u7684\u6570\u5b66\u6a21\u578b\u3002","sidebar":"tutorialSidebar"},"compiler/recursive-description-of-patterns":{"id":"compiler/recursive-description-of-patterns","title":"Recursive Description of Patterns \u6a21\u5f0f\u7684\u9012\u5f52\u63cf\u8ff0","description":"\u63cf\u8ff0\u6a21\u5f0f\u7684\u65b9\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u6587\u7ae0\u5206\u522b\u5229\u7528\u4e86\u201c\u81ea\u52a8\u673a\u201d\u8fd9\u79cd\u56fe\u4e2d\u8def\u5f84\u6807\u53f7\u7684\u56fe\u8bba\u65b9\u5f0f\uff0c\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4ee3\u6570\u65b9\u5f0f\u3002\u73b0\u5728\u5b66\u4e60\u7b2c\u4e09\u79cd\u63cf\u8ff0\u6a21\u5f0f\u7684\u65b9\u5f0f\uff0c\u79f0\u4e3a\u201c\u4e0a\u4e0b\u6587\u65e0\u5173\u6587\u6cd5\u201d\u7684\u9012\u5f52\u5b9a\u4e49\u3002","sidebar":"tutorialSidebar"},"concurrency-in-go/index":{"id":"concurrency-in-go/index","title":"Go Concurrency Again","description":"Most contents are excerpts form this book Concurrency in Go. Buy yourself a book if you like it.","sidebar":"tutorialSidebar"},"concurrency-in-go/internal":{"id":"concurrency-in-go/internal","title":"Goroutines and the Go Runtime","description":"It\'s worth taking a moment to take a peek at how the runtime works, how it stitches everything together under the covers.","sidebar":"tutorialSidebar"},"concurrency-in-go/introduction":{"id":"concurrency-in-go/introduction","title":"Introduction on Concurrency and Parallelism","description":"Why is Concurrency hard?","sidebar":"tutorialSidebar"},"concurrency-in-go/patterns":{"id":"concurrency-in-go/patterns","title":"Concurrency Patterns in Go","description":"Compose these concurrency primitives properly will help to keep the program scalable and maintainable.","sidebar":"tutorialSidebar"},"concurrency-in-go/primitives":{"id":"concurrency-in-go/primitives","title":"Concurrency Primitives","description":"Put very simply, a goroutine is a function that is running concurrently (remember: not necessarily in parallel!) alongside other code.","sidebar":"tutorialSidebar"},"concurrency-in-go/scalability":{"id":"concurrency-in-go/scalability","title":"Concurrency at Scale","description":"Scaling concurrent operations within a single process.","sidebar":"tutorialSidebar"},"data-structure/graph":{"id":"data-structure/graph","title":"Graph \u56fe","description":"\u4ece\u67d0\u79cd\u610f\u4e49\u4e0a\u770b\uff0c\u56fe\u5c31\u662f\u4e8c\u5143\u5173\u7cfb\u3002\u5229\u7528\u4e00\u7cfb\u5217\u7531\u7ebf\uff08\u8fb9\uff09\u6216\u7bad\u5934\uff08\u5f27\uff09\u8fde\u63a5\u7684\u70b9\uff08\u8282\u70b9\uff09\u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u89c6\u89c9\u6548\u679c\u3002","sidebar":"tutorialSidebar"},"data-structure/hash-table":{"id":"data-structure/hash-table","title":"Hash table \u6563\u5217\u8868","description":"Overview","sidebar":"tutorialSidebar"},"data-structure/index":{"id":"data-structure/index","title":"Teach yourself some DataStructure","description":"Contents:","sidebar":"tutorialSidebar"},"data-structure/list":{"id":"data-structure/list","title":"list \u8868","description":"(a1, a2,...,an)","sidebar":"tutorialSidebar"},"data-structure/priority-queue":{"id":"data-structure/priority-queue","title":"Priority Queue \u4f18\u5148\u961f\u5217","description":"\u4f18\u5148\u961f\u5217\u9488\u5bf9\u4e8e\u5728\u961f\u5217\u57fa\u7840\u4e0a\uff0c\u6709\u4e9b\u5143\u7d20\u5177\u6709\u66f4\u9ad8\u4f18\u5148\u7ea7\u7684\u60c5\u51b5\u3002\u636e\u79f0\uff0c\u4f18\u5148\u961f\u5217\u7684\u6570\u636e\u7ed3\u6784\u662f\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u6700\u96c5\u81f4\u5bf9\u4e00\u79cd\u3002","sidebar":"tutorialSidebar"},"data-structure/set-n-map":{"id":"data-structure/set-n-map","title":"Set and Map \u96c6\u5408","description":"- set\u662f\u4e00\u4e2a\u6392\u5e8f\u540e\u5230\u5bb9\u5668\uff0c\u4e0d\u5141\u8bb8\u91cd\u590d\u3002","sidebar":"tutorialSidebar"},"data-structure/sort":{"id":"data-structure/sort","title":"Sort \u6392\u5e8f","description":"\u5143\u7d20\u4e2a\u6570\u7279\u522b\u591a\uff0c\u65e0\u6cd5\u5728\u4e3b\u5b58\u50a8\u5668\u4e2d\u5b8c\u6210\u65f6\uff0c\u5fc5\u987b\u5728\u78c1\u76d8\u6216\u78c1\u5e26\u4e0a\u5b8c\u6210\u7684\u6392\u5e8f\uff0c\u53eb\u505a\u5916\u90e8\u6392\u5e8f\u3002","sidebar":"tutorialSidebar"},"data-structure/tree":{"id":"data-structure/tree","title":"Tree \u6811","description":"Features","sidebar":"tutorialSidebar"},"data-structure/vector":{"id":"data-structure/vector","title":"Vector \u5bb9\u5668","description":"TBD","sidebar":"tutorialSidebar"},"docker/automation":{"id":"docker/automation","title":"Automation","description":"Continuous Integration","sidebar":"tutorialSidebar"},"docker/cheatsheet":{"id":"docker/cheatsheet","title":"Cheatsheet","description":"docker system","sidebar":"tutorialSidebar"},"docker/container-monitoring":{"id":"docker/container-monitoring","title":"Container monitoring","description":"Observability with containerized monitoring","sidebar":"tutorialSidebar"},"docker/docker":{"id":"docker/docker","title":"Docker","description":"Fun facts about images","sidebar":"tutorialSidebar"},"docker/docker-compose":{"id":"docker/docker-compose","title":"Docker Compose","description":"Modern cloud-native apps are made of multiple smaller services that interact to form a useful app. We call this pattern microservices. A simple example might be an app with the following seven services:","sidebar":"tutorialSidebar"},"docker/health-checks":{"id":"docker/health-checks","title":"Health checks","description":"Health Checks","sidebar":"tutorialSidebar"},"docker/index":{"id":"docker/index","title":"Learn some Docker","description":"Docker is a great technology to learn. It starts with one simple concept: packaging an application together with all its dependencies, so you can run that app in the same way anywhere. That concept makes your applications portable between laptops, data-centers, and clouds, and it breaks down barriers between development and operations teams.","sidebar":"tutorialSidebar"},"docker/networking":{"id":"docker/networking","title":"Docker Networking","description":"Docker Networking","sidebar":"tutorialSidebar"},"docker/orchestration":{"id":"docker/orchestration","title":"Orchestration","description":"Orchestration is about running containerized apps across multiple servers -- a cluster of servers.","sidebar":"tutorialSidebar"},"docker/persistent-storage":{"id":"docker/persistent-storage","title":"Persistent storage","description":"Containers are a perfect runtime for stateless applications. But not all parts of your app will be stateless. There will be components that use disks to improve performance or for permanent data storage.","sidebar":"tutorialSidebar"},"docker/production-practices":{"id":"docker/production-practices","title":"Production Practices","description":"Optimizing the image","sidebar":"tutorialSidebar"},"docker/remote-engine":{"id":"docker/remote-engine","title":"Remote access","description":"Remote access is how you administer test environments or debug issues in production, and it\u2019s also how you enable the continuous deployment part of your CI/CD pipeline. Continuous deployment is the next stage of the pipeline -- connecting to a remote Docker Engine and deploying the new version of the app.","sidebar":"tutorialSidebar"},"docker/security":{"id":"docker/security","title":"Security in Docker","description":"Security is all about layers.","sidebar":"tutorialSidebar"},"interpreter-in-js/character-input-stream":{"id":"interpreter-in-js/character-input-stream","title":"The character input stream","description":"This is the smallest part. We\'re going to create a \\"stream object\\" which provides operations to read characters from a string. A stream object has 4 methods:","sidebar":"tutorialSidebar"},"interpreter-in-js/index":{"id":"interpreter-in-js/index","title":"Writing a interpreter in JavaScript","description":"Writing a parser is, depending on the language, a moderately complex task. In essence, it must transform a piece of code (which we inspect by looking at the characters) into an abstract syntax tree (AST). The AST is a structured in-memory representation of the program, and it\'s \\"abstract\\" in the sense that it does not care exactly what characters is the source code made of, but it faithfully represents the semantics of it.","sidebar":"tutorialSidebar"},"interpreter-in-js/interpreter":{"id":"interpreter-in-js/interpreter","title":"The Interpreter","description":"So far we have wrote 3 functions","sidebar":"tutorialSidebar"},"interpreter-in-js/parser":{"id":"interpreter-in-js/parser","title":"The AST","description":"As mentioned, the parser will build a structure which faithfully represents the semantics of the program. An AST node is a plain JavaScript object that has a type property specifying what kind of node it is, and additional information, depending on the particular type.","sidebar":"tutorialSidebar"},"interpreter-in-js/token-input-stream":{"id":"interpreter-in-js/token-input-stream","title":"The token input stream","description":"The tokenizer (also called \u201clexer\u201d) operates on a character input stream and returns a stream object with the same interface, but the values returned by peek() / next() will be tokens. A token is an object with two properties","sidebar":"tutorialSidebar"},"kubernetes/api-server":{"id":"kubernetes/api-server","title":"the Kubernetes API Server","description":"The API server is the gateway to the Kubernetes cluster.","sidebar":"tutorialSidebar"},"kubernetes/architecture":{"id":"kubernetes/architecture","title":"Kubernetes Architecture","description":"Declarative Configuration","sidebar":"tutorialSidebar"},"kubernetes/authentication-authorization":{"id":"kubernetes/authentication-authorization","title":"Authentication, User Management, Authorization and Admission Control","description":"As with any multitenant, distributed system, user management forms the basis for how Kubernetes ultimately authenticates identities, determines appropriate levels of access, enables self-service capabilities, and maintains auditability.","sidebar":"tutorialSidebar"},"kubernetes/cheatsheet":{"id":"kubernetes/cheatsheet","title":"Cheatsheet","description":"- Install Docker and the core Kubernetes","sidebar":"tutorialSidebar"},"kubernetes/configmap-secret":{"id":"kubernetes/configmap-secret","title":"ConfigMap and Secret","description":"ConfigMap and Secret key examples","sidebar":"tutorialSidebar"},"kubernetes/constructs":{"id":"kubernetes/constructs","title":"Kubernetes Constructs","description":"The architecture","sidebar":"tutorialSidebar"},"kubernetes/index":{"id":"kubernetes/index","title":"Playing with Kubernetes","description":"Cheatsheet","sidebar":"tutorialSidebar"},"kubernetes/monitoring-n-logging":{"id":"kubernetes/monitoring-n-logging","title":"Monitoring and Logging","description":"It\'s importance to not just monitor the cluster pieces but also monitor the cluster functionality that users require.","sidebar":"tutorialSidebar"},"kubernetes/networking":{"id":"kubernetes/networking","title":"Networking, Load Balancers, Ingress","description":"Container Network Interface / CNI","sidebar":"tutorialSidebar"},"kubernetes/pv-pvc":{"id":"kubernetes/pv-pvc","title":"Storage and Running Stateful Applications","description":"Volume","sidebar":"tutorialSidebar"},"kubernetes/scaling":{"id":"kubernetes/scaling","title":"Updates, Gradual Rollouts, AutoScaling","description":"Deployments are the recommended way to deal with scaling and application updates going forward.","sidebar":"tutorialSidebar"},"kubernetes/scheduler":{"id":"kubernetes/scheduler","title":"the Kubernetes Scheduler","description":"There is a dedicated binary in the Kubernetes, which is called the Kubernetes scheduler, to schedule containers to work nodes in the cluster of machines.","sidebar":"tutorialSidebar"},"kubernetes/workloads":{"id":"kubernetes/workloads","title":"Deployments, Jobs, and DaemonSets","description":"Kubernetes supports various types of workloads:","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/basic-features":{"id":"lisp-interpreter-in-c/basic-features","title":"01 Basic features of C","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/conditionals":{"id":"lisp-interpreter-in-c/conditionals","title":"11 Conditionals","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/error-handling":{"id":"lisp-interpreter-in-c/error-handling","title":"06 Error Handling","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/evaluation":{"id":"lisp-interpreter-in-c/evaluation","title":"05 Evaluation","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/functions":{"id":"lisp-interpreter-in-c/functions","title":"10 Functions","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/index":{"id":"lisp-interpreter-in-c/index","title":"Before start","description":"The whole online documents.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/interactive-prompt":{"id":"lisp-interpreter-in-c/interactive-prompt","title":"02 An Interactive Prompt","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/language-grammar":{"id":"lisp-interpreter-in-c/language-grammar","title":"03 Language Grammar","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/parsing":{"id":"lisp-interpreter-in-c/parsing","title":"04 Parsing","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/q-expressions":{"id":"lisp-interpreter-in-c/q-expressions","title":"08 Q-Expressions","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/s-expressions":{"id":"lisp-interpreter-in-c/s-expressions","title":"07 S-Expressions","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/standard-library":{"id":"lisp-interpreter-in-c/standard-library","title":"13 Standard Library","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/strings":{"id":"lisp-interpreter-in-c/strings","title":"12 Strings","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-c/variables":{"id":"lisp-interpreter-in-c/variables","title":"09 Variables","description":"document","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-00":{"id":"lisp-interpreter-in-py/chapter-00","title":"Before start","description":"Tutorial starts here, it tells us to build a simple lisp interpreter from scratch in Python.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-01":{"id":"lisp-interpreter-in-py/chapter-01","title":"01 Why study interpreters and compilers?","description":"I will give you three reasons.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-02":{"id":"lisp-interpreter-in-py/chapter-02","title":"02","description":"On this section, we\'ll create a new version of the calculator from calc1.py that will be able to:","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-03":{"id":"lisp-interpreter-in-py/chapter-03","title":"03","description":"Today I\'m going to talk about how to parse (recognize) and interpret arithmetic expressions that have any number of plus or minus operators in it, for example \\"7 - 3 + 2 - 1\\".","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-04":{"id":"lisp-interpreter-in-py/chapter-04","title":"04","description":"In the previous article you have learned how to parse (recognize) and interpret arithmetic expressions with any number of plus or minus oprators in them. You also learned about syntax diagrams and how they can be used to specify the syntax of a programming language.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-05":{"id":"lisp-interpreter-in-py/chapter-05","title":"05","description":"We\'re going to use all the knowledge you\'ve gained from previous articles in the series and learn how to parse and interpret arithmetic expressions that have any number of addition, subtraction, multiplication, and division operators.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-06":{"id":"lisp-interpreter-in-py/chapter-06","title":"06","description":"In this article, we\'re wrapping up our discussion of arithmetic expressions by adding parenthesized expressions to the grammar and implementing an interpreter that will be able to evaluate parenthesized expressions with arbitrarily deep nesting, like 7 + 3 * (10 / (12 / 3 ) + 1 ) -1.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-07":{"id":"lisp-interpreter-in-py/chapter-07","title":"07","description":"Up until now, we had our interpreter and parser code mixed together and the interpreter would evaluate an expression as soon as the parser recognized a certain language construct like addition, subtraction, multiplication, or division. Such interpreters are called syntax-directed interpreters. They usually make a single pass over the input and are suitable for basic language applications. In order to analyze more complex Pascal programming language constructs, we need to build an intermediate representation (IR). Our parser will be responsible for building an IR and our interpreter will use it to interpret the input represented as the IR.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-08":{"id":"lisp-interpreter-in-py/chapter-08","title":"08","description":"In this article, we\'ll talk about unary operators, namely unary plus (+) and unary minus (-) operators.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-09":{"id":"lisp-interpreter-in-py/chapter-09","title":"09","description":"Here is what we\'re going to go through:","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-10":{"id":"lisp-interpreter-in-py/chapter-10","title":"10","description":"In this article we will update our interpreter to parse and interpret our very first complete Pascal program. The program can also be compiled by the Free Pascal compiler, fpc.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-11":{"id":"lisp-interpreter-in-py/chapter-11","title":"11","description":"Recap what we\'ve learned so far:","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-12":{"id":"lisp-interpreter-in-py/chapter-12","title":"12","description":"In this article we are going to take a few more baby steps and learn how to parse Pascal procedure declarations.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-13":{"id":"lisp-interpreter-in-py/chapter-13","title":"13 Introduction to semantic analysis","description":"While our Pascal program can be grammatically correct and the parser can successfully build an abstract syntax tree, the program still can contain some pretty serious errors. To catch those errors we need to use the abstract syntax tree and the informaiton from the symbol table.","sidebar":"tutorialSidebar"},"lisp-interpreter-in-py/chapter-14":{"id":"lisp-interpreter-in-py/chapter-14","title":"14","description":"This is what we\'re going to learn today:","sidebar":"tutorialSidebar"},"network-top-down-approach/ch01-network-and-internet":{"id":"network-top-down-approach/ch01-network-and-internet","title":"\u8ba1\u7b97\u673a\u7f51\u7edc\u548c\u56e0\u7279\u7f51","description":"Overview","sidebar":"tutorialSidebar"},"network-top-down-approach/ch02-application-layer":{"id":"network-top-down-approach/ch02-application-layer","title":"\u5e94\u7528\u5c42","description":"\u672c\u7ae0\u4ece\u5e94\u7528\u5c42\u6982\u5ff5\u5f00\u59cb\uff0c\u5305\u62ec\u5e94\u7528\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u7f51\u7edc\u670d\u52a1\u3001\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u3001\u8fdb\u7a0b\u548c\u8fd0\u8f93\u5c42\u63a5\u53e3\u3002","sidebar":"tutorialSidebar"},"network-top-down-approach/ch03-transport-layer":{"id":"network-top-down-approach/ch03-transport-layer","title":"\u8fd0\u8f93\u5c42","description":"\u9996\u5148\u5c06\u8ba8\u8bba\u8fd0\u8f93\u5c42\u548c\u7f51\u7edc\u5c42\u7684\u5173\u7cfb\u3002\u5148\u7814\u7a76\u8fd0\u8f93\u5c42\u7684\u7b2c\u4e00\u4e2a\u5173\u952e\u529f\u80fd\uff0c\u5373 \u5c06\u7f51\u7edc\u5c42\u7684\u5728\u4e24\u4e2a\u7aef\u7cfb\u7edf\u4e4b\u95f4\u7684\u4ea4\u4ed8\u670d\u52a1\uff0c\u6269\u5c55\u5230\u8fd0\u884c\u5728\u4e24\u4e2a\u4e0d\u540c\u7aef\u7cfb\u7edf\u4e0a\u7684\u5e94\u7528\u5c42\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4ea4\u4ed8\u670d\u52a1\u3002","sidebar":"tutorialSidebar"},"network-top-down-approach/ch04-network-layer":{"id":"network-top-down-approach/ch04-network-layer","title":"\u7f51\u7edc\u5c42","description":"\u7f51\u7edc\u5c42\u662f\u534f\u8bae\u6808\u4e2d\u6700\u590d\u6742\u7684\u5c42\u6b21\u4e4b\u4e00\u3002\u8bb2\u91cd\u6e29\u4e24\u79cd\u7528\u4e8e\u6784\u9020\u7f51\u7edc\u5c42\u5206\u7ec4\u4ea4\u4ed8\u7684\u65b9\u6cd5\uff0c\u5373\u6570\u636e\u62a5\u6a21\u5f0f\u548c\u865a\u7535\u8def\u6a21\u5f0f\uff0c\u5e76\u4e14\u7406\u89e3\u7f16\u5740\u5728\u4ea4\u4ed8\u5206\u7ec4\u5230\u5176\u76ee\u7684\u4e3b\u673a\u4e2d\u6240\u8d77\u7684\u91cd\u8981\u4f5c\u7528\u3002","sidebar":"tutorialSidebar"},"network-top-down-approach/network-top-down-approach":{"id":"network-top-down-approach/network-top-down-approach","title":"Computer Network","description":"Computer Networking: A Top-Down Approach, Fourth Edition (ISBN 978-0-321-49770-3) by James F. Kurose and Keith W. Ross","sidebar":"tutorialSidebar"},"sicp/building-abstractions-with-data":{"id":"sicp/building-abstractions-with-data","title":"Building Abstractions with Data","description":"Programs are typically designed to model complex phenomena, and more often than not one must construct computational objects that have several parts in order to model real-world phenomena that have several aspects. Any programming language would provide the means for building abstractions by combining data objects to form compound data.","sidebar":"tutorialSidebar"},"sicp/building-abstractions-with-procedures":{"id":"sicp/building-abstractions-with-procedures","title":"Building Abstractions with Procedures","description":"The Elements of Programming","sidebar":"tutorialSidebar"},"sicp/computing-with-register-machines":{"id":"sicp/computing-with-register-machines","title":"Computing with Register Machines","description":"In this chapter we will describe processes in terms of the step-by-step operation of a traditional computer. Such a computer, or register machine, sequentially executes instructions that manipulate the contents of a fixed set of storage elements called registers.","sidebar":"tutorialSidebar"},"sicp/index":{"id":"sicp/index","title":"Structure and Interpretation of Computer Programs","description":"Structure and Interpretation of Computer Programs is the most useful (magic) book when you struggle on the computer science / programs / languages.","sidebar":"tutorialSidebar"},"sicp/metalinguistic-abstraction":{"id":"sicp/metalinguistic-abstraction","title":"Metalinguistic Abstraction","description":"There is one general techniques for expert programmers to control the complexity of sophisticated systems:","sidebar":"tutorialSidebar"},"sicp/modularity-objects-state":{"id":"sicp/modularity-objects-state","title":"Modularity, Objects, and State","description":"Effective program synthesis also requires organizational principles that can guide us in formulating the overall design of a program.","sidebar":"tutorialSidebar"}}}')}}]);