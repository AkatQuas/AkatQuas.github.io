const traverser=(e,t)=>{function r(e,r){let n=t[e.type];switch(n&&n.enter&&n.enter(e,r),e.type){case"Program":a(e.body,e);break;case"CallExpression":a(e.params,e);break;case"NumberLiteral":case"StringLiteral":break;default:throw new TypeError(e.type)}}function a(e,t){e.forEach((e=>{r(e,t)}))}r(e,null)},transformer=e=>{let t={type:"Program",body:[]};return e._context=t.body,traverser(e,{NumberLiteral:{enter(e,t){t._context.push({type:"NumberLiteral",value:e.value})}},StringLiteral:{enter(e,t){t._context.push({type:"StringLiteral",value:e.value})}},CallExpression:{enter(e,t){let r={type:"CallExpression",callee:{type:"Identifier",name:e.name},arguments:[]};e._context=r.arguments,"CallExpression"!==t.type&&(r={type:"ExpressionStatement",expression:r}),t._context.push(r)}}}),t};module.exports=transformer;